generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model allergens {
  allergen_id Int     @id @default(autoincrement())
  name        String? @db.VarChar(255)
  icon        String? @db.VarChar(255)
  order       Int?
}

model allergens_product {
  allergen_id Int
  product_id  Int

  @@id([allergen_id, product_id])
}

model allies {
  ally_id              Int       @id @default(autoincrement())
  client_id            Int?
  name                 String?   @db.VarChar(50)
  type                 String?   @db.VarChar(3)
  show_all_restaurants String?   @db.VarChar(1)
  show_all_hotels      String?   @db.VarChar(1)
  show_all_excursions  String?   @db.VarChar(1)
  status               String?   @db.VarChar(1)
  registered_at        DateTime? @db.DateTime(0)
}

model api_keys {
  api_key_id     Int     @id @default(autoincrement())
  api_key        String? @db.VarChar(40)
  level          Int
  ignore_limits  Boolean @default(false)
  is_private_key Boolean @default(false)
  ip_addresses   String? @db.Text
  date_created   Int
  company_id     Int?
}

model business_type {
  business_type_id Int     @id @default(autoincrement())
  description      String? @db.VarChar(50)
}

model categories {
  category_id   Int        @id @default(autoincrement())
  name          String?    @db.VarChar(50)
  image         String?    @db.VarChar(45)
  status        Boolean?   @default(true)
  display_order Int?
  client_id     Int?
  registered_at DateTime?  @db.DateTime(0)
  deleted       Int?       @default(0) @db.TinyInt
  deleted_at    String?    @db.VarChar(20)
  deleted_by    String?    @db.VarChar(50)
  deleted_ip    String?    @db.VarChar(20)
  clients       clients?   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_category_client")
  sections      sections[]

  @@index([client_id], map: "fk_category_client")
}

model client_languages {
  client_id   Int
  language_id String  @db.VarChar(2)
  clients     clients @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_client_languages")

  @@id([client_id, language_id])
  @@index([language_id], map: "fk_idiomas_clientes_idioma")
}

model clients {
  client_id                 Int                @id
  country_code              String?            @db.VarChar(10)
  tax_id                    String?            @db.VarChar(20)
  name                      String?            @db.VarChar(100)
  address                   String?            @db.VarChar(255)
  instagram_account         String?            @db.VarChar(100)
  whatsapp_account          String?            @db.VarChar(12)
  company_logo              String?            @db.VarChar(70)
  link_style                String?            @db.VarChar(40)
  main_logo                 String?            @db.VarChar(100)
  app_name                  String?            @db.VarChar(50)
  email                     String             @db.VarChar(200)
  confirmed                 Boolean?
  activation_code           String?            @db.VarChar(200)
  photo1                    String?            @db.VarChar(200)
  photo2                    String?            @db.VarChar(200)
  signup_date               DateTime?          @db.Date
  activation_date           DateTime?          @db.Date
  qr_photo                  String?            @db.VarChar(50)
  currency_id               Int?
  type_id                   Int?
  country_id                Int?
  allergens                 Boolean?
  city                      String?            @db.VarChar(50)
  postal_code               String?            @db.VarChar(15)
  website                   String?            @db.VarChar(200)
  social_description        String?            @db.VarChar(200)
  whatsapp_number           String?            @db.VarChar(15)
  whatsapp_message          String?            @db.VarChar(500)
  enable_whatsapp           Boolean?
  menu_background           String?            @db.VarChar(100)
  background_color          String?            @db.VarChar(6)
  footer_text               String?            @db.VarChar(1000)
  show_purchase_link        Boolean?
  purchase_clicks           Int?
  purchase_button_text      String?            @db.VarChar(20)
  primary_button_bg_color   String?            @db.VarChar(7)
  primary_button_text_color String?            @db.VarChar(7)
  monday_schedule_start     String?            @db.VarChar(5)
  monday_schedule_end       String?            @db.VarChar(5)
  tuesday_schedule_start    String?            @db.VarChar(5)
  tuesday_schedule_end      String?            @db.VarChar(5)
  wednesday_schedule_start  String?            @db.VarChar(5)
  wednesday_schedule_end    String?            @db.VarChar(5)
  thursday_schedule_start   String?            @db.VarChar(5)
  thursday_schedule_end     String?            @db.VarChar(5)
  friday_schedule_start     String?            @db.VarChar(5)
  friday_schedule_end       String?            @db.VarChar(5)
  saturday_schedule_start   String?            @db.VarChar(5)
  saturday_schedule_end     String?            @db.VarChar(5)
  sunday_schedule_start     String?            @db.VarChar(5)
  sunday_schedule_end       String?            @db.VarChar(5)
  show_schedule             Boolean?
  enable_stripe             Boolean?
  stripe_mode               Boolean?
  card_only_purchases       Boolean?
  enable_intro              Boolean?
  intro_video               String?            @db.VarChar(100)
  remove_intro_button       String?            @db.VarChar(50)
  remove_intro_position     String?            @db.VarChar(10)
  remove_intro_margin       String?            @db.VarChar(3)
  intro_logo                String?            @db.VarChar(50)
  intro_logo_position       String?            @db.VarChar(10)
  intro_logo_margin         String?            @db.VarChar(3)
  footer_text_color         String?            @db.VarChar(6)
  stripe_id                 String?            @db.VarChar(50)
  stripe_commission_percent Decimal?           @db.Decimal(5, 2)
  stripe_commission_amount  Decimal?           @db.Decimal(10, 2)
  expiration_date           DateTime?          @db.Date
  allows_reservation        Boolean?
  delivery_service          Boolean?
  delivery_status           Boolean?
  facebook                  String?            @db.VarChar(150)
  twitter                   String?            @db.VarChar(150)
  instagram                 String?            @db.VarChar(150)
  web_email                 String?            @db.VarChar(70)
  phone                     String?            @db.VarChar(20)
  menu_type                 clients_menu_type?
  categories                categories[]
  client_languages          client_languages[]
  magazine                  magazine[]
  products                  products[]
  reservations              reservations[]
}

model countries {
  country_id  Int     @id @default(autoincrement())
  description String? @db.VarChar(50)
}

model currencies {
  currency_id Int     @id @default(autoincrement())
  description String? @db.VarChar(50)
  symbol      String? @db.VarChar(3)
  stripe_code String? @db.VarChar(5)
}

model establishment_areas {
  area_id     Int      @id @default(autoincrement())
  client_id   Int?
  name        String?  @db.VarChar(50)
  description String?  @db.VarChar(500)
  status      Boolean?
}

model languages {
  id          String  @id @db.VarChar(2)
  description String? @db.VarChar(100)
}

model magazine {
  magazine_id      Int       @id @default(autoincrement())
  client_id        Int?
  publication_date DateTime? @db.Date
  status           Boolean?
  title            String?   @db.VarChar(100)
  description      String?   @db.Text
  registered_at    DateTime? @db.DateTime(0)
  file             String?   @db.VarChar(100)
  hash_code        String?   @db.VarChar(50)
  tracking_code    String?   @db.Text
  clients          clients?  @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_magazine_client")

  @@index([client_id], map: "fk_magazine_client")
}

model marketplace {
  id            Int      @id @default(autoincrement())
  product_type  Int?
  image         String?  @db.VarChar(100)
  video         String?  @db.VarChar(100)
  quantity      Int?
  status        Boolean?
  name          String?  @db.VarChar(50)
  description   String?  @db.Text
  sku           String?  @db.VarChar(50)
  deleted       Boolean?
  deleted_at    String?  @db.VarChar(20)
  deleted_by    String?  @db.VarChar(20)
  deleted_ip    String?  @db.VarChar(20)
  display_order Int?
  registered_at String?  @db.VarChar(20)
  price         Decimal? @db.Decimal(12, 2)
}

model menu {
  menu_id           Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  menu_history      menu_history[]
  menu_translations menu_translations[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model menu_history {
  history_id Int      @id @unique(map: "id") @default(autoincrement())
  first_name String?  @db.VarChar(30)
  last_name  String?  @db.VarChar(30)
  url        String?  @db.VarChar(300)
  accepted   Boolean?
  created_at DateTime @db.DateTime(0)
  update_at  DateTime @db.DateTime(0)
  delete_at  DateTime @db.DateTime(0)
  menu_id    Int
  client_id  Int?
  menu       menu     @relation(fields: [menu_id], references: [menu_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_menu_history_menu")

  @@index([client_id], map: "fk_historial_cliente")
  @@index([menu_id], map: "fk_menu_history_menu")
}

model menu_translations {
  translation_id Int     @id @default(autoincrement())
  menu_id        Int?
  language       String?
  name           String?
  menu           menu?   @relation(fields: [menu_id], references: [menu_id], onDelete: NoAction, onUpdate: NoAction, map: "TraduccionMenu_menuId_fkey")

  @@unique([menu_id, language], map: "TraduccionMenu_menuId_idioma_key")
}

model notification {
  id        String   @id
  userId    String
  type      String
  message   String
  data      String?
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model products {
  product_id                   Int                 @id @default(autoincrement())
  client_id                    Int?
  section_id                   Int?
  name                         String              @db.VarChar(100)
  display_order                Int?
  price                        Decimal             @db.Decimal(10, 2)
  status                       Boolean?            @default(true)
  description                  String?             @db.Text
  image                        String?             @db.VarChar(100)
  registered_at                DateTime?           @db.DateTime(0)
  sku                          String?             @db.VarChar(100)
  multiple_prices              String?             @db.VarChar(1)
  price1                       Decimal?            @db.Decimal(14, 2)
  price2                       Decimal?            @db.Decimal(14, 2)
  price3                       Decimal?            @db.Decimal(14, 2)
  price4                       Decimal?            @db.Decimal(14, 2)
  label_price1                 String?             @db.VarChar(50)
  label_price2                 String?             @db.VarChar(50)
  label_price3                 String?             @db.VarChar(50)
  label_price4                 String?             @db.VarChar(50)
  departure_point              String?             @db.VarChar(1000)
  requirements                 String?             @db.VarChar(1000)
  commission_price1            Decimal?            @db.Decimal(14, 2)
  commission_price2            Decimal?            @db.Decimal(14, 2)
  commission_price3            Decimal?            @db.Decimal(14, 2)
  commission_price4            Decimal?            @db.Decimal(14, 2)
  allow_reservation_commission String?             @db.VarChar(1)
  duration_hours               String?             @db.VarChar(2)
  duration_minutes             String?             @db.VarChar(2)
  free_pickup_hotel            String?             @db.VarChar(1)
  zone                         String?             @db.VarChar(100)
  deleted                      Boolean             @default(false)
  deleted_at                   String?             @db.VarChar(20)
  deleted_by                   String?             @db.VarChar(50)
  deleted_ip                   String?             @db.VarChar(20)
  video                        String?             @db.VarChar(100)
  no_picture                   Int?                @default(0)
  clients                      clients?            @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_client")
  sections                     sections?           @relation(fields: [section_id], references: [section_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_section")
  products_sections            products_sections[]

  @@index([client_id], map: "fk_product_client")
  @@index([section_id], map: "fk_products_section")
}

model products_sections {
  product_id Int
  section_id Int
  sections   sections @relation(fields: [section_id], references: [section_id], onDelete: Cascade, map: "fk_product_section")
  products   products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "fk_section_product")

  @@id([product_id, section_id])
  @@index([section_id], map: "fk_product_section")
}

model purchase_statistics {
  statistic_id               Int       @id @default(autoincrement())
  client_id                  Int?
  date                       DateTime? @db.DateTime(0)
  total_amount               Decimal?  @db.Decimal(14, 2)
  cart                       String?   @db.Text
  ip_address                 String?   @db.VarChar(50)
  stripe_payment_response_id String?   @db.VarChar(100)
  stripe_payment_status      String?   @db.VarChar(25)
  stripe_payment_json        String?   @db.Text
}

model reservation_control {
  control_id        Int       @id @default(autoincrement())
  client_id         Int?
  request_date      DateTime? @db.DateTime(0)
  reservation_date  DateTime? @db.Date
  reservation_time  String?   @db.VarChar(5)
  guest_count       Int?
  name              String?   @db.VarChar(60)
  phone             String?   @db.VarChar(15)
  email             String?   @db.VarChar(200)
  notes             String?   @db.Text
  id_area           Int?
  status            Boolean?
  confirmation_date DateTime? @db.DateTime(0)
  confirmed_by      String?   @db.VarChar(100)
  rejection_date    DateTime? @db.DateTime(0)
  rejected_by       String?   @db.VarChar(100)
  ip_address        String?   @db.VarChar(20)
}

model reservation_details {
  detail_id    Int
  row_id       Int
  product_id   Int?
  quantity     Int?
  unit_price   Decimal?      @db.Decimal(14, 2)
  sku          String?       @db.VarChar(45)
  name         String?       @db.VarChar(300)
  options      String?       @db.VarChar(500)
  booking_id   Int?
  reservations reservations? @relation(fields: [booking_id], references: [reservation_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reservation_details_booking")

  @@id([detail_id, row_id])
  @@index([booking_id], map: "fk_reservation_details_booking")
  @@index([product_id], map: "fk_reservation_details_product")
}

model reservations {
  reservation_id               Int                   @id @default(autoincrement())
  client_id                    Int?
  name                         String?               @db.VarChar(50)
  phone                        String?               @db.VarChar(15)
  address                      String?               @db.VarChar(500)
  is_delivery                  Boolean?
  delivery_cost                Decimal?              @db.Decimal(14, 2)
  booking_amount               Decimal?              @db.Decimal(14, 2)
  status                       Boolean?
  request_date                 String?               @db.VarChar(20)
  approval_date                String?               @db.VarChar(20)
  currency_id                  Int?
  delivery_zone_id             Int?
  ip                           String                @db.VarChar(15)
  delivery_zone_desc           String?               @db.VarChar(100)
  rejection_date               String?               @db.VarChar(20)
  rejected_by                  String?               @db.VarChar(30)
  read_date                    String?               @db.VarChar(20)
  read_by                      String?               @db.VarChar(30)
  approved_by                  String?               @db.VarChar(30)
  dispatch_date                String?               @db.VarChar(20)
  dispatched_by                String?               @db.VarChar(30)
  shipment_date                String?               @db.VarChar(20)
  shipped_by                   String?               @db.VarChar(30)
  hash                         String?               @db.VarChar(50)
  service_rating               String?               @db.VarChar(1)
  rating_comment               String?               @db.Text
  client_confirmation_date     String?               @db.VarChar(20)
  publish_rating               String?               @db.VarChar(1)
  rating_status_date           String?               @db.VarChar(20)
  rating_published_by          String?               @db.VarChar(30)
  email                        String?               @db.VarChar(100)
  stripe_payment_response_id   String?               @db.VarChar(100)
  stripe_payment_status        String?               @db.VarChar(50)
  stripe_payment_json_response String?               @db.Text
  stripe_refund_response_id    String?               @db.VarChar(100)
  stripe_refund_status         String?               @db.VarChar(50)
  stripe_refund_json_response  String?               @db.Text
  reservation_details          reservation_details[]
  clients                      clients?              @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reservation_client")

  @@index([client_id], map: "fk_reservation_client")
}

model roles {
  role_id Int     @id @default(autoincrement())
  name    String? @db.VarChar(100)
  users   users[]
}

model sections {
  section_id        Int                 @id @default(autoincrement())
  client_id         Int?
  name              String?             @db.VarChar(50)
  status            Boolean?            @default(true)
  display_order     Int?
  image             String?             @db.VarChar(100)
  registered_at     DateTime?           @db.DateTime(0)
  category_id       Int?
  deleted           Int?                @default(0) @db.TinyInt
  deleted_at        String?             @db.VarChar(20)
  deleted_by        String?             @db.VarChar(50)
  deleted_ip        String?             @db.VarChar(20)
  products          products[]
  products_sections products_sections[]
  categories        categories?         @relation(fields: [category_id], references: [category_id], onDelete: Cascade, map: "fk_section_category")

  @@index([category_id], map: "fk_section_category")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shipping_zones {
  shipping_zone_id Int       @id @default(autoincrement())
  client_id        Int?
  name             String?   @db.VarChar(100)
  status           Boolean?
  is_free          Boolean?
  cost             Decimal?  @db.Decimal(14, 2)
  registered_at    DateTime? @db.DateTime(0)
}

model store_product_type {
  product_type_id Int      @id @default(autoincrement())
  name            String?  @db.VarChar(50)
  status          Boolean?
}

model translations {
  translation_id Int     @id @default(autoincrement())
  language_id    String? @db.VarChar(2)
  table_name     String? @db.VarChar(50)
  column_name    String? @db.VarChar(50)
  element_id     Int?
  text_value     String? @db.Text
}

model users {
  user_id        String   @id @db.VarChar(30)
  password       String?  @db.VarChar(30)
  username       String?  @db.VarChar(200)
  profile        String?  @db.VarChar(2)
  email          String   @db.VarChar(255)
  nationality    String?  @db.VarChar(1)
  identification String?  @db.VarChar(11)
  address        String?  @db.VarChar(1000)
  phone          String?  @db.VarChar(200)
  client_id      Int?
  is_seller      Boolean?
  has_commission Boolean?
  status         Boolean?
  user_type      String?  @db.VarChar(2)
  job_title      String?  @db.VarChar(50)
  biography      String?  @db.Text
  avatar         String?  @db.VarChar(100)
  whatsapp       String?  @db.VarChar(45)
  first_name     String?  @db.VarChar(45)
  position       String?  @db.VarChar(45)
  skills         String?  @db.VarChar(500)
  website        String?  @db.VarChar(200)
  maps_link      String?  @db.VarChar(200)
  confirmed      Boolean?
  manifest       String?  @db.VarChar(50)
  role_id        Int?
  roles          roles?   @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_roles")

  @@index([role_id], map: "fk_usuarios_roles")
}

model zones {
  zone_id       Int       @id @default(autoincrement())
  client_id     Int?
  zone          String?   @db.VarChar(50)
  free_pickup   Boolean?
  status        Boolean?
  registered_at DateTime? @db.DateTime(0)
}

enum clients_menu_type {
  digital
  pdf
}
